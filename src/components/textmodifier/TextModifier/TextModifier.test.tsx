/**
 * This code was generated by Builder.io
 */
import React from "react";
import { render, screen, fireEvent } from "@testing-library/react";
import { describe, it, expect, vi } from "vitest";
import TextModifier from "./TextModifier";

describe("TextModifier", () => {
  it("renders without crashing", () => {
    render(<TextModifier onGenerate={() => {}} />);
    expect(screen.getByText("Modify your text")).toBeInTheDocument();
  });

  it("calls onGenerate when Generate button is clicked", () => {
    const mockOnGenerate = vi.fn();
    render(<TextModifier onGenerate={mockOnGenerate} />);

    const generateButton = screen.getByText("Generate");
    fireEvent.click(generateButton);

    expect(mockOnGenerate).toHaveBeenCalledTimes(1);
  });

  it("renders instruction inputs", () => {
    render(<TextModifier onGenerate={() => {}} />);
    expect(screen.getByPlaceholderText("Add instructions")).toBeInTheDocument();
    expect(
      screen.getByPlaceholderText("Paraphrase the below paragraph in 3 lines")
    ).toBeInTheDocument();
  });

  it("renders textarea with default content", () => {
    render(<TextModifier onGenerate={() => {}} />);
    const textarea = screen.getByLabelText(
      "The Current Landscape of Electric Vehicle Charging"
    );
    expect(textarea).toBeInTheDocument();
    expect(textarea).toHaveValue(
      expect.stringContaining(
        "The Current Landscape of Electric Vehicle Charging"
      )
    );
  });
});
