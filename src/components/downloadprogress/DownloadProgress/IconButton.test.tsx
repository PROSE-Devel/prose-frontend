/**
 * This code was generated by Builder.io
 */
import React from "react";
import { render, screen, fireEvent } from "@testing-library/react";
import { describe, it, expect, vi } from "vitest";
import IconButton from "./IconButton";

describe("IconButton", () => {
  const mockProps = {
    icon: "http://example.com/icon.png",
    altText: "Test Icon",
  };

  it("renders the button with correct aria-label", () => {
    render(<IconButton {...mockProps} />);
    const button = screen.getByRole("button", { name: mockProps.altText });
    expect(button).toBeInTheDocument();
  });

  it("renders the icon image", () => {
    render(<IconButton {...mockProps} />);
    const image = screen.getByRole("img");
    expect(image).toHaveAttribute("src", mockProps.icon);
    expect(image).toHaveAttribute("alt", "");
  });

  it("applies additional className when provided", () => {
    const className = "test-class";
    render(<IconButton {...mockProps} className={className} />);
    const button = screen.getByRole("button");
    expect(button).toHaveClass(className);
  });

  it("calls onClick handler when clicked", () => {
    const onClickMock = vi.fn();
    render(<IconButton {...mockProps} onClick={onClickMock} />);
    const button = screen.getByRole("button");
    fireEvent.click(button);
    expect(onClickMock).toHaveBeenCalledTimes(1);
  });
});
